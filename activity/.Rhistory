ungroup()
View(rawtb)
rawtb %>%
group_by(country,year,sex,age) %>%
summarize(n=n())
rawtb %>%
group_by(country,year,sex,age) %>%
summarize(n=n()) %>%
ungroup()
View(rawtb)
rawtb %>%
group_by(country,year,sex,age) %>%
summarize(n=n()) %>%
ungroup()
library(EDAWR)
tb
#View the data
View(tb)
# MY turn
tb2=tb %>%
filter(!is.na(child),!is.na(adult),!is.na(elderly)) %>%
mutate(cases=child+adult+elderly) %>%
group_by(country,year) %>%
summarize(cases=sum(cases)) %>%
ungroup()
# unit of analysis
View(rawtb)
rawtb %>%
group_by(country,year,sex,age) %>%
summarize(n=n()) %>%
ungroup()
rawtb %>%
group_by(country,year,sex,age) %>%
summarize(n=n()) %>%
ungroup()
rawtb %>%
group_by(country,year,sex,age) %>%
summarize(n=n())
library(dplyr)
View(rawtb)
rawtb %>%
group_by(country,year,sex,age) %>%
summarize(n=n()) %>%
ungroup()
library(EDAWR)
cases
storms
pollution
cases$storm
storms$storm
storms$wind
cases$country
names(cases)[-1]
unlist(cases)
unlist(cases[1:3,2:4])
install.packages("tidyr")
library(tidyr)
library(EDAWR)
tb2
tb2=tb %>%
filter(!is.na(child),!is.na(adult),!is.na(elderly)) %>%
mutate(cases=child+adult+elderly) %>%
group_by(country,year) %>%
summarize(cases=sum(cases)) %>%
ungroup()
tb2
cases
gather(cases,"Year","N",2:4)
gather(cases,"Year","N",2:4,convert=F)
gather(cases,"Year","N",2:4,convert=T) %>%
glimpse()
gather(cases,"Year","N",2:4,convert=F) %>%
glimpse()
tb
tb %>%
gather("age","cases",4:6,Convert=T)
tb %>%
gather("age","cases",4:6,Convert=F)
tb %>%
gather("age","cases",4:6)
tb %>%
gather("age","cases",4:6) %>%
arrange(country,year,sex,age)
pollution
pollution %>%
spread(size,amount)
pollution2=pollution %>%
spread(size,amount)
pollution2
pollution2 %>%
gather("size","amount",large:small)
pollution2 %>%
gather("size","amount",large:small) %>%
arrange(city,size)
pollution2 %>%
gather("size","amount",large:small) %>%
arrange(desc(city),size)
storms
storms %>%
seprate(data,c("year","month","day"))
storms %>%
seprate(data,c("year","month","day"),"-")
storms %>%
separate(data,c("year","month","day"),"-")
storms %>%
separate(date,c("year","month","day"),"-")
storms %>%
separate(date,c("year","month","day"))
storms2=storms %>%
separate(date,c("year","month","day"))
storms2
storms2 %>%
unite(year:day,"date","/")
storms2 %>%
unite(date,year:day,"/")
storms2 %>%
unite(date,year:day,"_")
storms2 %>%
unite(date,year:day,"-")
storms2 %>%
unite(date,year:day,sep="-")
storms2 %>%
unite(date,year:day,sep="/")
storms2 %>%
unite(date,day:year,sep="/")
population
population %>%
gather("year","n",2:20)
population %>%
gather("year","n",2:20) %>%
arrange(country,year)
population2=population %>%
gather("year","n",2:20) %>%
arrange(country,year)
tp2
filter(!is.na(child),!is.na(adult),!is.na(elderly)) %>%
mutate(cases=child+adult+elderly) %>%
group_by(country,year) %>%
summarize(cases=sum(cases)) %>%
ungroup()
tb2=tb %>%
filter(!is.na(child),!is.na(adult),!is.na(elderly)) %>%
mutate(cases=child+adult+elderly) %>%
group_by(country,year) %>%
summarize(cases=sum(cases)) %>%
ungroup()
tp2
tb2
population2
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,col="blue")
abline(h=12)
hist(ppm,col='green')
rug(ppm)
low
high
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm,col="green")
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
reg=table(pollution$region)
reg<-table(pollution$region)
reg
barplot(reg)
barplot(reg,col="wheat",main="Number of Conties in Each Region")
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(ppm~region,col="red")
boxplot(pm25~region,col="red")
boxplot(pollution~pm25~pollution~region,col="red")
boxplot(pollution$pm25~pollution$region,col="red")
boxplot(pm25 ~ region,data=pollution,col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east=subset(pollution,region=="east")
east<-subset(pollution,region=="east")
head(east)
hist(pm25,data=east,col="green")
hist(east$pm25,col="green")
hist(subset(pollution,region==west)$pm25,col="green")
hist(subset(pollution,region=='west')$pm25,col="green")
plot(pollution, latitude~pm25)
plot(pollution$latitude,pollution$pm25)
with(pollution,plot(latitude,pm25))
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,pollution$ppm,col=pollution$region)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow=c(1,2),mar=c(5,4,2,1))
west=subset(pollution,region==west)
west=subset(pollution,region=="west")
west<-subset(pollution,region=="west")
plot(west$latitude,pm25,main="West")
plot(west$latitude,pmm,main="West")
plot(west$latitude,west$pm25,main="West")
plot(east$latitude,east$pm25,main="East")
?Devices
with(faithful,plot(eruptions,waiting))
with(faithful,plot(eruptions,waiting),main="Old Faithful Geyser data")
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting),main="Old Faithful Geyser data")
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.copy(png,"geyserplot.png")
dev.copy(png,file="geyserplot.png")
dev.off()
head(car)
head(cars)
with(cars,plot(speed,dist))
text(x=mean(cars$spped),y=max(cars$dist),"SWIRL rules!")
text(mean(cars$spped),max(cars$dist),"SWIRL rules!")
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
with(cars,plot(speed,dist))
text(max(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(LIfe.Exp~Income,data=state,c(4,1))
xyplot(Life.Exp~Income,data=state,c(4,1))
xyplot(Life.Exp~Income|region,data=state,c(4,1))
xyplot(Life.Exp~Income|region,data=state,layiyt=c(4,1))
xyplot(Life.Exp~Income|region,data=state,layout=c(4,1))
xyplot(Life.Exp~Income|region,data=state,layout=c(1,4))
xyplot(Life.Exp~Income|region,data=state,layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(hwy~dipl,mpg)
qplot(hwy~displ,mpg)
qplot(hwy,displ,mpg)
?qplot
qplot(displ,hwy,data=mpg)
head(airquality)
range(airquality$Ozone,na.rm=T)
range(airquality$Ozone,na.rm=True)
range(airquality$Ozone,na.rm=TRUE)
hist(airquality$Ozone)
library(swirl)
swirl()
head(airquality)
range(airquality$Ozone,na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
title(main="Ozone and Wind in New York City")
par(length)
length(par())
names(par())
par()$pin
par()$fg
par("pch")
par("lty")
library(swirl)
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm)
boxplot(ppm,col="blue")
abline(h=12)
hist(ppm,col="green")
rug(ppm)
low
sort(high)
high
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm,col='green')
abline(v=12)
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
reg<-pollution$region
reg<-table(pollution$region)
reg
barplot(reg)
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(pollution, pm25~region, col="red")
boxplot(data=pollution, pm25~region, col="red")
boxplot(pm25~region, data=pollution,col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east=subset(pollution, region=="east")
east<-subset(pollution, region=="east")
head(east)
hist(east$pm25)
hist(east$pm25,col="green")
westM<-subset(pollution, region=="west")
hist(subset(pollution, region=="west")$pm25,col="green")
call
with(pllution,plot(latitute,pm25))
with(pollution, plot(latitude, pm25))
abline(h=12,lwd=2)
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,ppm,col="pollution$region")
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfro=c(1,2),mar=c(5,4,2,1))
par(mfrow=c(1,2),mar=c(5,4,2,1))
west<-subset(population,region=="west")
west<-subset(pollution,region=="west")
plot(west$latitude,west$pm25,main="West")
plot(east$latitude,east$pm25,main="East")
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind,data=airquality)
xyplot(Ozone~Wind,data=airquality,col="red",pch=8,main="Big Apple Data")
xyplot(Ozone~Wind|Month,data=airquality,col="red",pch=8,main="Big Apple Data")
xyplot(Ozone~Wind|as.factor(Month),data=airquality,col="red",pch=8,main="Big Apple Data")
xyplot(Ozone~Wind|as.factor(Month),data=airquality,col="red",pch=8,main="Big Apple Data",layout=c(5,1))
xyplot(Ozone~Wind|as.factor(Month),data=airquality,main="Big Apple Data",layout=c(5,1))
xyplot(Ozone~Wind|as.factor(Month),data=airquality,layout=c(5,1))
xyplot(Ozone~Wind|Month,data=airquality,layout=c(5,1))
p=xyplot(Ozone~Wind,data=airquality)
p<-xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[['formula']]
p[["x.limits"]]
table(f)
xyplot(y~x|f,layout=c(2,1))
v1
v2
myedit("plot1.R")
source(pathofile("plot1.R"),local=TRUE)
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R",local=TRUE))
source(pathtofile("plot2.R",local=TRUE)
)
source(pathtofile("plot2.R"),local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color,diamonds$cut)
myedit(myLabels.R)
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local=TRUE)
source(pathtofile("myLabels.R"),local=TRUE)
xyplot(price~carat|color*cut,data=diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut,data=diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
sample(colors(),10)
pal=colorRamp(c("red","blue"))
pal<-colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1<-colorRampPalette(c("red","blue"))
p1(2)
p1(6)
Oxcc
Oxcc
0xcc
colorRampPalette(c("red","yellow"))
p2<-colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
play()
showMe(p1(1))
showMe(p1(2))
showMe(p1(3))
showMe(p1(100))
showMe(p1(0))
showMe(p1(2))
nxt()
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3<-colorRampPalette(c("blue","green"),alpha=.5)
p3(5)
plot(x,y,pch=19,col=c(0,0.5,0.5))
plot(x,y,pch=19,col=rgb(0,0.5,0.5))
plot(x,y,pch=19,col=rgb(0,0.5,0.5,0.3))
cols<-brewer.pal(3,"BuGn")
showMe(cols)
pal(colorRampPalette(cols))
pal<-colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano,col=pal(20))
image(volcano,col=p1(20))
str(mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,color=drv,data=mpg)
play()
qplot(displ,hwy,shape=drv,data=mpg)
nxt()
qplot(displ,hwy,color=drv,geom=c("point","smooth"),data=mpg)
qplot(y=hwy,data=mpg,color=drv)
myhihg
myhigh
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy,data=mpg,fill=drv)
qplot(hwy,data=mpg,color=drv)
isTRUE(3)
isTRUE(NA)
!isTRUE(NA)
xor(5==6,!FALSE)
xor(5==5,!FALSE)
identical(xor, 'xor')
ints<-sample(10)
ints
ints <2
which(ints<2)
which(ints>2)
any(ints>10)
all(ints<11)
all(c(TRUE, FALSE, TRUE))
all(c(TRUE, TRUE, TRUE))
mean
sum
?col
?plot
?point
?points
?pch
swirl()
library(swirl)
swirl()
1
swirl()
windows()
play()
data(mtcars)
head(mtcars)
with(mtcars, plot(mpg,cyl))
nxt()
?Devices
with(faithful,plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
library(swirl)
swirl()
x<-c(44,NA,5,NA)
x*3
y<rnorm(1000)
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
is.na(my_data)
my_na<-is.na(my_data)
my_na
my_data==NA
dev.copy(png, file = "geyserplot.png")
library(swirl)
swirl()
?Devices
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
play()
png("plot.png")
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.off()
knit2html(PA1_template.Rmd)
library(knitr)
knit2html(PA1_template.Rmd)
setwd("~/GitHub/RepData_PeerAssessment1/activity")
knit2html(PA1_template.Rmd)
setwd("~/GitHub/RepData_PeerAssessment1/activity")
knit2html("PA1_template.Rmd")
browseURL(“PA1_template.html”)
browseURL(“C:/Users/Ghada/Documents/GitHub/RepData_PeerAssessment1/activity/PA1_template.html”)
browseURL('C:/Users/Ghada/Documents/GitHub/RepData_PeerAssessment1/activity/PA1_template.html')
knit2html("PA1_template.Rmd")
browseURL('C:/Users/Ghada/Documents/GitHub/RepData_PeerAssessment1/activity/PA1_template.html')
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
browseURL('C:/Users/Ghada/Documents/GitHub/RepData_PeerAssessment1/activity/PA1_template.html')
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
browseURL('C:/Users/Ghada/Documents/GitHub/RepData_PeerAssessment1/activity/PA1_template.html')
knit2html("PA1_template.Rmd")
browseURL('C:/Users/Ghada/Documents/GitHub/RepData_PeerAssessment1/activity/PA1_template.html')
browseURL('C:/Users/Ghada/Documents/GitHub/RepData_PeerAssessment1/activity/PA1_template.html')
knit2html("PA1_template.Rmd")
browseURL('C:/Users/Ghada/Documents/GitHub/RepData_PeerAssessment1/activity/PA1_template.html')
knit2html("PA1_template.Rmd")
browseURL('C:/Users/Ghada/Documents/GitHub/RepData_PeerAssessment1/activity/PA1_template.html')
knit2html("PA1_template.Rmd")
browseURL('C:/Users/Ghada/Documents/GitHub/RepData_PeerAssessment1/activity/PA1_template.html')
knit2html("PA1_template.Rmd")
browseURL('C:/Users/Ghada/Documents/GitHub/RepData_PeerAssessment1/activity/PA1_template.html')
